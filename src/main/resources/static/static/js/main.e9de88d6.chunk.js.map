{"version":3,"sources":["square.js","board.js","game.js","index.js"],"names":["Square","props","className","onClick","value","Board","i","this","squares","rows","rn","cols","cn","push","renderSquare","React","Component","Game","state","history","Array","fill","xIsNext","index","lastMov","length","calculateWinner","newboard","slice","_xIsNext","setState","concat","splice","console","log","current","winner","status","moves","map","item","jumpTo","toString","handleClick","bind","lines","a","b","c","ReactDOM","render","document","getElementById"],"mappings":"wNA+BeA,MA7Bf,SAAgBC,GACd,OACE,wBACEC,UAAU,SACVC,QAASF,EAAME,QAFjB,SAGGF,EAAMG,SCHPC,E,kKAEJ,SAAaC,GAAI,IAAD,OACd,OAAQ,cAAC,EAAD,CACNF,MAAOG,KAAKN,MAAMO,QAAQF,GAE1BH,QAAS,kBAAM,EAAKF,MAAME,QAAQG,KAD7B,KAAOA,K,oBAKhB,WAEE,IADA,IAAIG,EAAO,GACFC,EAAK,EAAGA,EAAK,EAAGA,IAAM,CAE7B,IADA,IAAIC,EAAO,GACFC,EAAK,EAAGA,EAAK,EAAGA,IACvBD,EAAKE,KAAKN,KAAKO,aAAkB,EAALJ,EAASE,IAEvCH,EAAKI,KACH,qBAAKX,UAAU,YAAf,SACGS,GAD6B,MAAMD,IAM1C,OACE,8BACGD,Q,GA1BWM,IAAMC,WAmCXX,ICmEAY,G,wDAjGb,WAAYhB,GAAQ,IAAD,8BACjB,cAAMA,IACDiB,MAAQ,CACXC,QAAS,CACP,CACEX,QAASY,MAAM,GAAGC,KAAK,MACvBC,SAAS,KANE,E,+CAcnB,SAAYC,GAEV,IAAMC,EAAUjB,KAAKW,MAAMC,QAAQZ,KAAKW,MAAMC,QAAQM,OAAS,GAC/D,IAAID,EAAQhB,QAAQe,KAAUhB,KAAKmB,gBAAgBF,EAAQhB,SAA3D,CAIA,IAAImB,EAAWH,EAAQhB,QAAQoB,QAC/BD,EAASJ,GAASC,EAAQF,QAAU,IAAM,IAC1C,IAAIO,GAAYL,EAAQF,QAGxBf,KAAKuB,SAAS,CACZX,QAASZ,KAAKW,MAAMC,QAAQY,OAAO,CACjCvB,QAASmB,EACTL,QAASO,S,oBAKf,SAAON,GACL,IAAIL,EAAK,eAAQX,KAAKW,OACtBA,EAAMC,QAAQa,OAAOT,EAAM,GAC3BhB,KAAKuB,SAASZ,K,oBAGhB,WAAU,IAAD,OACPe,QAAQC,IAAI,UACZD,QAAQC,IAAI3B,KAAKW,OACjB,IAAMC,EAAUZ,KAAKW,MAAMC,QACrBgB,EAAUhB,EAAQA,EAAQM,OAAS,GAErCW,EAAS7B,KAAKmB,gBAAgBS,EAAQ3B,SAEpC6B,EAASD,EACb,aAAeA,EACf,iBAAmBD,EAAQb,QAAU,IAAM,KAEvCgB,EAAQnB,EAAQoB,KAAI,SAACC,EAAMjB,GAAP,OACxB,qBAAIpB,QAAS,kBAAM,EAAKsC,OAAOlB,IAA/B,mBAES,QAAUA,EAAQ,KADpBA,EAAMmB,eAIf,OACE,sBAAKxC,UAAU,OAAf,UACE,qBAAKA,UAAU,aAAf,SACE,cAAC,EAAD,CAAOM,QAAS2B,EAAQ3B,QACtBL,QAASI,KAAKoC,YAAYC,KAAKrC,UAGnC,sBAAKL,UAAU,YAAf,UACE,8BAAMmC,IACN,6BACGC,Y,6BAMX,SAAgB9B,GAWd,IAVA,IAAMqC,EAAQ,CACZ,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAEAvC,EAAI,EAAGA,EAAIuC,EAAMpB,OAAQnB,IAAK,CACrC,kBAAkBuC,EAAMvC,GAAxB,GAAOwC,EAAP,KAAUC,EAAV,KAAaC,EAAb,KACA,GAAIxC,EAAQsC,IAAMtC,EAAQsC,KAAOtC,EAAQuC,IAAMvC,EAAQsC,KAAOtC,EAAQwC,GACpE,OAAOxC,EAAQsC,GAGnB,OAAO,S,GA9FQ/B,IAAMC,YCAvBiC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.e9de88d6.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nfunction Square(props) {\r\n  return (\r\n    <button\r\n      className=\"square\"\r\n      onClick={props.onClick }>\r\n      {props.value}\r\n    </button>\r\n  );\r\n}\r\n/*\r\nclass Square extends React.Component {\r\n\r\n\r\n    clicked(_value){\r\n        this.setState({value: _value})\r\n    }\r\n\r\n    render() {\r\n      return (\r\n        <button \r\n            className=\"square\"\r\n            onClick={() => {this.props.onClick()}}\r\n        >\r\n          {this.props.value}\r\n        </button>\r\n      );\r\n    }\r\n  }\r\n*/\r\nexport default Square;","import React from 'react';\r\nimport Square from './square';\r\n\r\n\r\nclass Board extends React.Component {\r\n\r\n  renderSquare(i) {\r\n    return (<Square\r\n      value={this.props.squares[i]}\r\n      key={\"sq\" + i}\r\n      onClick={() => this.props.onClick(i)}\r\n    />);\r\n  }\r\n\r\n  render() {\r\n    let rows = [];\r\n    for (let rn = 0; rn < 3; rn++) {\r\n      let cols = [];\r\n      for (let cn = 0; cn < 3; cn++) {\r\n        cols.push(this.renderSquare(rn * 3 + cn));\r\n      }\r\n      rows.push(\r\n        <div className=\"board-row\" key={\"row\"+rn}>\r\n          {cols}\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        {rows}\r\n      </div>\r\n    );\r\n  }\r\n\r\n \r\n\r\n}\r\n\r\nexport default Board;","import React from 'react';\r\nimport Board from './board';\r\nimport './index.css';\r\n\r\n\r\n\r\nclass Game extends React.Component {\r\n\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      history: [\r\n        {\r\n          squares: Array(9).fill(null),\r\n          xIsNext: true\r\n        }\r\n      ]\r\n\r\n    }\r\n  }\r\n\r\n\r\n  handleClick(index) {\r\n\r\n    const lastMov = this.state.history[this.state.history.length - 1];\r\n    if (lastMov.squares[index] || this.calculateWinner(lastMov.squares)) {\r\n      return;\r\n    }\r\n   \r\n    let newboard = lastMov.squares.slice();\r\n    newboard[index] = lastMov.xIsNext ? 'X' : 'O';\r\n    let _xIsNext = !lastMov.xIsNext;\r\n\r\n    //nwstate.history = nwstate.history.concat(current);\r\n    this.setState({\r\n      history: this.state.history.concat({\r\n        squares: newboard,\r\n        xIsNext: _xIsNext\r\n      })\r\n    });\r\n  }\r\n\r\n  jumpTo(index) {\r\n    let state = { ...this.state };\r\n    state.history.splice(index+1);\r\n    this.setState(state);\r\n  }\r\n\r\n  render() {\r\n    console.log(\"Reder:\")\r\n    console.log(this.state)\r\n    const history = this.state.history;\r\n    const current = history[history.length - 1];\r\n\r\n    let winner = this.calculateWinner(current.squares);\r\n\r\n    const status = winner ?\r\n      \"Winner is \" + winner :\r\n      'Next player: ' + (current.xIsNext ? \"X\" : \"O\");\r\n\r\n    const moves = history.map((item, index) =>\r\n      <li onClick={() => this.jumpTo(index)}\r\n        key={index.toString()}>\r\n        Go to {\"Nro \" + (index + 1)}\r\n      </li>)\r\n\r\n    return (\r\n      <div className=\"game\">\r\n        <div className=\"game-board\">\r\n          <Board squares={current.squares}\r\n            onClick={this.handleClick.bind(this)}\r\n          />\r\n        </div>\r\n        <div className=\"game-info\">\r\n          <div>{status}</div>\r\n          <ol>\r\n            {moves}\r\n          </ol>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  calculateWinner(squares) {\r\n    const lines = [\r\n      [0, 1, 2],\r\n      [3, 4, 5],\r\n      [6, 7, 8],\r\n      [0, 3, 6],\r\n      [1, 4, 7],\r\n      [2, 5, 8],\r\n      [0, 4, 8],\r\n      [2, 4, 6],\r\n    ];\r\n    for (let i = 0; i < lines.length; i++) {\r\n      const [a, b, c] = lines[i];\r\n      if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\r\n        return squares[a];\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n\r\n}\r\n\r\n\r\nexport default Game;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport Game from './game'\r\n  // ========================================\r\n  \r\n\r\n  ReactDOM.render(\r\n    <Game />,\r\n    document.getElementById('root')\r\n  );\r\n  "],"sourceRoot":""}